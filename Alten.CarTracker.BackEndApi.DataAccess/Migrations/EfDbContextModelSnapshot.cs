// <auto-generated />
using Alten.CarTracker.CustomersService.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alten.CarTracker.BackEndApi.DataAccess.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alten.CarTracker.BackEndApi.Domain.Model.Car", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkCarId")
                        .HasMaxLength(25);

                    b.Property<int>("CustomerId")
                        .HasColumnName("fkCustomerId");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = "YS2R4X20005399401",
                            CustomerId = 1,
                            RegistrationNumber = "ABC123"
                        },
                        new
                        {
                            Id = "VLUR4X20009093588",
                            CustomerId = 1,
                            RegistrationNumber = "DEF456"
                        },
                        new
                        {
                            Id = "VLUR4X20009048044",
                            CustomerId = 1,
                            RegistrationNumber = "GHI789"
                        },
                        new
                        {
                            Id = "YS2R4X20005388011",
                            CustomerId = 2,
                            RegistrationNumber = "JKL012"
                        },
                        new
                        {
                            Id = "YS2R4X20005387949",
                            CustomerId = 2,
                            RegistrationNumber = "MNO345"
                        },
                        new
                        {
                            Id = "VLUR4X20009048066",
                            CustomerId = 3,
                            RegistrationNumber = "PQR678"
                        },
                        new
                        {
                            Id = "YS2R4X20005387055",
                            CustomerId = 3,
                            RegistrationNumber = "STU901"
                        });
                });

            modelBuilder.Entity("Alten.CarTracker.BackEndApi.Domain.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkCustomerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cementvägen 8, 111 11 Södertälje",
                            Name = "Kalles Grustransporter AB"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Balkvägen 12, 222 22 Stockholm",
                            Name = "Johans Bulk AB"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Budgetvägen 1, 333 33 Uppsala",
                            Name = "Haralds Värdetransporter AB"
                        });
                });

            modelBuilder.Entity("Alten.CarTracker.BackEndApi.Domain.Model.Car", b =>
                {
                    b.HasOne("Alten.CarTracker.BackEndApi.Domain.Model.Customer", "Customer")
                        .WithMany("Cars")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
